/*
2022-03-12

컴퓨터의 특징?
전기만 있으면 무한 반복해서 무언가의 일을 꾸준히, 정확히 할 수 있다.

프로그래밍도 반복적인 일을 시키는 경우가 많다.
반복적인 경우? 어떠한 동일한 코드를 계속 반복해서 실행한다.

[반복문]
반복적인 행위를 코드로 표현하는 것
내가 원하는 하나의 반복문만 가지고도 다른 모든 반복 표현을 할 수 있다.
단지 형태가 다르기 때문에 상황에 따라 편리하거나 불편하거나 하는 반복문이 있을 수 있다.
보통 배열로 많은 반복을 처리한다.
반복을 사용하기 전에는 초기값 세팅 필수.

배열 순회 - 맨 처음부터 끝까지 한 번씩만 읽는다.
무한루프 - 영원히 반복되는 반복문

1. 반복문
    문을 통해 반복하는 방법

2. 식을 이용해서 반복하는 패턴
    값으로 환원되는 패턴
    배열 연산에서 다룰 예정

[for문]
반복에 대한 비교를 먼저 수행
코드가 실행되지 않는 케이스가 존재함
반복을 컨트롤 하는 변수를 for문 안에서 사용후 폐기해버리기 때문에
사용함에 있어 유연함을 제공한다.

1 - 최초 실행(반복할 초기 값)
2 - 비교(비교가 참인 동안 반복)
3 - 처음 시작되고 다시 반복할 때 반드시 실행되는 영역
for(1; 2; 3){
    
}

[while문]
바깥쪽에서 초기 값을 세팅해주어야 한다.
while(비교){
    비교가 참인 경우 반복할 코드
}

[do while문]
do{
    
}while(비교) // 여기서 비교가 참이면 do를 실행시키고 아니면 종료 

[while, do while]
반복을 컨트롤하는 변수를 따로 만들어주어야 하고,
만들어주기 위해 반복문이 여러 개 등장하게 되면? 매번 변수를 바꾸거나 초기 값을
바꿔주야 하는 불편함이 있다.

비교 시점 차이
while - 반복하기 시작하기 전
do while - 코드를 일단 실행시키고 비교
            반드시 한 번은 실행시켜야할 코드가 있을 때 사용

[for of문]
item - 순회할 배열에서 아이템을 하나씩 꺼내서 그 값이 들어갈 변수
        매번 반복할 때마다 만들게 된다.
        let, const 둘 중 하나로 사용
        값을 바꾸지 않고 읽기 용도로만 사용한다면? const 사용하면 되겠쬬??
arr - 순회할 배열
배열에서 반복할 때마다 원소를 처음부터 끝까지 하나씩 꺼내서 item변수에 넣어줌
for(const item of arr){
    
}

배열의 위치값을 읽기위한 변수 값이 등장할 필요가 없음, 비교문도 필요 없음
코드가 적어지고 버그 가능성도 적어진다.
배열을 처음부터 한 번씩 읽으면서 순회할 때
배열의 특정 위치에 관심이 없는 상황에서 쓰면 괴장히 편리함

[for in문]
arr - 순회할 배열 또는 객체
index - 순회할 배열의 위치값이 들어갈 변수

배열에 있는 key값 즉, 위치값을 처음부터 하나씩 index에 넘겨준다.
위치 값을 컨트롤할 변수가 필요없는 구조이긴 하지만
위치값을 넘겨주는 구조
배열값을 읽기 위해서는 arr[index] 이렇게 작성해야 한다.
for (const index in arr){
    console.log(arr[index]);
}

배열이든 객체든 그 키 값을 하나씩 꺼내올 때 많이 쓰게된다.

*/

const arr = ['a', 'b', 'c', 'd'];

// 배열 순회
for(let i = 0;i<arr.length;i++){
    console.log(arr[i]);
}

// for문에서 사용한 i는 for문 블록을 나옴과 동시에 사라지면서
// 여기에는 없는 상태임
let i = 0;
while(i<arr.length){
    console.log(arr[i]);
    i++;
}

i = 0;
do{
    console.log(arr[i]);
    i++;
}while(i<arr.length)

for(const item of arr){
    console.log(item);
}

for (const index in arr){
    console.log(arr[index]);
}

const obj = {
    color: 'red',
    width: 200,
    height: 200
}

for (const key in obj){
    console.log(key); //  color, widht, height
}