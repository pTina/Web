
let x =10;
const y = 20;

x = 200;

y = 500; // => 상수를 다른 값으로 바꾸는 것: 금지된 동작 => 애플리케이션이 종료됨

x = 300;

// obj자체를 다른 값으로 바꾸지 말라는 뜻
// obj의 내용물에 대해서는 관여하지 않는다.
const obj = {
    h: 200,
    w: 300
}

// 속성에 대해서는 얼마든지 변경 가능
obj.h = 100; 

/*
변수, 상수 모두 마지막에 넣은 값만 저장함

[변수]
let
한 번 만들어놓은 이후에 그 변수가 가지고 있는 값을 
다른 값으로 변경할 수 있다.

[상수]
const
최초 만들어질 때 단 한 번만 값을 넣을 수 있다.
그 이후에는 값을 바꾸지 못한다.

옛날에는 변수만 쓸 수 있었음
상수를 쓸 수 없었음 var

그래서 let, const가 추가됨

변수 변하는 값
값 자체를 변화시키는 경우가 많이 없다.
값 자체가 변화해야한다 => 이 자체가 많은 불안정성을 내포하고 있다.
그러므로 변하지 않는 값을 갖는 구조로 프로그래밍을 하는 습관, 테크닉을 연마하는 것을 권고

*/ 